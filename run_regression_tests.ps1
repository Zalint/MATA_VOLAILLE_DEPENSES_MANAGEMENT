# Script PowerShell pour ex√©cuter les tests de r√©gression
# Compatible avec l'environnement Windows PowerShell

Write-Host "üß™ D√âMARRAGE DES TESTS DE NON-R√âGRESSION" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

# V√©rifier que Node.js est install√©
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    exit 1
}

# V√©rifier que npm est install√©
try {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm d√©tect√©: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    exit 1
}

# V√©rifier que PostgreSQL est accessible
Write-Host "üîç V√©rification de la connexion √† la base de donn√©es..." -ForegroundColor Yellow

$env:DB_HOST = if ($env:DB_HOST) { $env:DB_HOST } else { "localhost" }
$env:DB_PORT = if ($env:DB_PORT) { $env:DB_PORT } else { "5432" }
$env:DB_NAME = if ($env:DB_NAME) { $env:DB_NAME } else { "mata_expenses_test_db" }
$env:DB_USER = if ($env:DB_USER) { $env:DB_USER } else { "zalint" }
$env:DB_PASSWORD = if ($env:DB_PASSWORD) { $env:DB_PASSWORD } else { "bonea2024" }

Write-Host "üì° Configuration de la base de donn√©es:" -ForegroundColor Cyan
Write-Host "   Host: $env:DB_HOST" -ForegroundColor Cyan
Write-Host "   Port: $env:DB_PORT" -ForegroundColor Cyan
Write-Host "   Database: $env:DB_NAME" -ForegroundColor Cyan
Write-Host "   User: $env:DB_USER" -ForegroundColor Cyan

# Installer les d√©pendances si n√©cessaire
if (-not (Test-Path "node_modules")) {
    Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå √âchec de l'installation des d√©pendances" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ D√©pendances install√©es avec succ√®s" -ForegroundColor Green
}

# Ex√©cuter les tests de base d'abord
Write-Host "üîß Ex√©cution des tests de base..." -ForegroundColor Yellow
npm run test
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Les tests de base ont √©chou√©" -ForegroundColor Red
    Write-Host "üîç V√©rifiez la configuration de la base de donn√©es et les d√©pendances" -ForegroundColor Yellow
    exit 1
}
Write-Host "‚úÖ Tests de base r√©ussis" -ForegroundColor Green

# Ex√©cuter les tests de r√©gression
Write-Host ""
Write-Host "üß™ EX√âCUTION DES TESTS DE R√âGRESSION" -ForegroundColor Magenta
Write-Host "====================================" -ForegroundColor Magenta

npm run test:regression
$regressionExitCode = $LASTEXITCODE

if ($regressionExitCode -eq 0) {
    Write-Host ""
    Write-Host "üéâ TOUS LES TESTS DE R√âGRESSION ONT R√âUSSI!" -ForegroundColor Green
    Write-Host "============================================" -ForegroundColor Green
    Write-Host "‚úÖ Test 1: Ajout d√©pense 1000 FCFA - PASS√â" -ForegroundColor Green
    Write-Host "‚úÖ Test 2: Suppression d√©pense 1000 FCFA - PASS√â" -ForegroundColor Green
    Write-Host "‚úÖ Test 3: Ajout cr√©ance 500 FCFA - PASS√â" -ForegroundColor Green
    Write-Host "‚úÖ Test 4: Suppression cr√©ance 500 FCFA - PASS√â" -ForegroundColor Green
    Write-Host "‚úÖ Test 5: Ajout transfert 750 FCFA - PASS√â" -ForegroundColor Green
    Write-Host "‚úÖ Test 6: Suppression transfert 750 FCFA - PASS√â" -ForegroundColor Green
    Write-Host "‚úÖ Coh√©rence Solde actuel = Solde Net - VALID√âE" -ForegroundColor Green
    Write-Host "‚úÖ Coh√©rence Audit Flux = Solde Net - VALID√âE" -ForegroundColor Green
    Write-Host ""
    Write-Host "üí° Les tests de non-r√©gression garantissent l'int√©grit√© des calculs de solde." -ForegroundColor Cyan
    Write-Host "üîí Pr√™t pour le d√©ploiement!" -ForegroundColor Green
} else {
    Write-Host ""
    Write-Host "‚ùå √âCHEC DES TESTS DE R√âGRESSION!" -ForegroundColor Red
    Write-Host "=================================" -ForegroundColor Red
    Write-Host "üîç Des incoh√©rences ont √©t√© d√©tect√©es dans les calculs de solde." -ForegroundColor Yellow
    Write-Host "üìã Actions recommand√©es:" -ForegroundColor Yellow
    Write-Host "   1. V√©rifiez la logique de calcul du solde net" -ForegroundColor Yellow
    Write-Host "   2. Contr√¥lez la coh√©rence des transactions" -ForegroundColor Yellow
    Write-Host "   3. Validez l'audit flux" -ForegroundColor Yellow
    Write-Host "   4. Consultez les logs d√©taill√©s ci-dessus" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "‚ö†Ô∏è  NE PAS D√âPLOYER TANT QUE LES TESTS NE PASSENT PAS!" -ForegroundColor Red
}

# Afficher les instructions pour l'automatisation Git
Write-Host ""
Write-Host "üîÑ AUTOMATISATION GIT" -ForegroundColor Cyan
Write-Host "=====================" -ForegroundColor Cyan
Write-Host "Ces tests s'ex√©cuteront automatiquement:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ √Ä chaque push vers main/master/develop" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ √Ä chaque pull request" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Via GitHub Actions (voir .github/workflows/regression-tests.yml)" -ForegroundColor Cyan
Write-Host ""
Write-Host "üí° Pour ex√©cuter manuellement:" -ForegroundColor Cyan
Write-Host "   npm run test:regression" -ForegroundColor Cyan
Write-Host "   # ou" -ForegroundColor Cyan
Write-Host "   .\run_regression_tests.ps1" -ForegroundColor Cyan

exit $regressionExitCode
