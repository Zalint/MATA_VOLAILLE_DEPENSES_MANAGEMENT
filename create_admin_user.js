const { Client } = require('pg');
const bcrypt = require('bcrypt');

// Configuration de la base de donn√©es
const dbConfig = {
    host: 'localhost',
    port: 5432,
    database: 'matavolaille_db',
    user: 'zalint',
    password: 'bonea2024'
};

async function createAdminUser() {
    const client = new Client(dbConfig);
    
    try {
        console.log('üîå Connexion √† la base de donn√©es...');
        await client.connect();
        console.log('‚úÖ Connect√© avec succ√®s !');
        
        // Cr√©er l'utilisateur admin
        const username = 'admin';
        const password = 'admin123';
        const hashedPassword = await bcrypt.hash(password, 10);
        
        console.log('\nüë§ Cr√©ation de l\'utilisateur admin...');
        
        const result = await client.query(`
            INSERT INTO users (username, password_hash, full_name, role, is_active) 
            VALUES ($1, $2, $3, $4, $5)
            ON CONFLICT (username) DO UPDATE SET
                password_hash = $2,
                full_name = $3,
                role = $4,
                is_active = $5
            RETURNING id, username, full_name, role
        `, [username, hashedPassword, 'Administrateur Syst√®me', 'admin', true]);
        
        console.log('‚úÖ Utilisateur admin cr√©√© avec succ√®s !');
        console.log('üìã D√©tails:');
        console.log(`   ID: ${result.rows[0].id}`);
        console.log(`   Username: ${result.rows[0].username}`);
        console.log(`   Nom: ${result.rows[0].full_name}`);
        console.log(`   R√¥le: ${result.rows[0].role}`);
        
        // Ajouter quelques param√®tres essentiels
        console.log('\n‚öôÔ∏è Ajout des param√®tres syst√®me...');
        
        await client.query(`
            INSERT INTO financial_settings (setting_key, setting_value) VALUES
            ('validate_expenses', 'true'),
            ('default_currency', 'FCFA'),
            ('max_expense_amount', '10000000'),
            ('system_initialized', 'true')
            ON CONFLICT (setting_key) DO NOTHING
        `);
        
        console.log('‚úÖ Param√®tres syst√®me configur√©s !');
        
        console.log('\nüéâ =====================================================');
        console.log('üéâ UTILISATEUR ADMIN CR√â√â AVEC SUCC√àS !');
        console.log('üéâ =====================================================');
        console.log('üîê INFORMATIONS DE CONNEXION:');
        console.log('   üë§ Nom d\'utilisateur: admin');
        console.log('   üîë Mot de passe: admin123');
        console.log('üéâ =====================================================');
        console.log('üöÄ Vous pouvez maintenant vous connecter √† votre application !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la cr√©ation de l\'utilisateur:', error.message);
        if (error.message.includes('users') && error.message.includes('does not exist')) {
            console.error('üí° La table users n\'existe pas. Assurez-vous d\'avoir ex√©cut√© le script de cr√©ation de base de donn√©es.');
        }
        process.exit(1);
        
    } finally {
        try {
            await client.end();
            console.log('üì™ Connexion ferm√©e.');
        } catch (closeError) {
            console.error('‚ö†Ô∏è Erreur lors de la fermeture:', closeError.message);
        }
    }
}

// V√©rifier si bcrypt est disponible
try {
    require('bcrypt');
} catch (error) {
    console.error('‚ùå Le module bcrypt n\'est pas trouv√© !');
    console.error('üí° Installez-le avec: npm install bcrypt');
    process.exit(1);
}

console.log('üë§ CR√âATEUR D\'UTILISATEUR ADMIN - MATA GROUP');
console.log('üë§ =========================================');
console.log('');

createAdminUser()
    .then(() => {
        console.log('\nüéâ Cr√©ation termin√©e avec succ√®s !');
        process.exit(0);
    })
    .catch((error) => {
        console.error('\n‚ùå √âchec de la cr√©ation:', error.message);
        process.exit(1);
    });
